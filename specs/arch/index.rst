========
設計文書
========

.. note::

    現時点での設計概要です

処理の流れ
==========

* 設定読み込み(Configure)
* 検査ロジックの初期化(Initialize)
* 対象の読み取り/パース(Read/Parse)
* トークン単位の検査(Analyze)
* レポートの出力(Report)


設定読み込み
============

コアによる設定の読み取りを行う。
上から順に読み取り、下のものほど優先される。

* デフォルト設定
* デフォルト指定の設定ファイル（存在する場合）
* オプションで指定された設定ファイル（指定された場合）
* コマンドラインオプション

ファイル読み取りなどのタイミングで処理不良が発生した場合は、
その場でシステムを終了する。


検査ロジックの初期化
====================

コアが事前に読み取った、検査ロジックのリストと設定を元に、
ロジック処理を行うオブジェクトの生成と初期化を行う。

いずれも、上から順に読み取り、下のものほど優先される。

* デフォルト設定
* 読み取り済みのロジック向け設定

このタイミングで処理不要が発生した場合は、
その場でシステムを終了する。


対象の読み取り/パース
=====================

引数を元に、検査対象のファイルドキュメントを読み取り、データユニットに分ける

ユニットは次の属性を持つ

* ファイルパス(テキストモードの場合は、STDIN)
* 文章のローデータ
* 文章の位置
* トークン化された文章データ
* 処理レポート

ユニット単位の検査
==================

ユニット単位で順に全検査ロジックによる検査を行う。

検査時に結果データを受け取り、ユニットで管理する。

レポートの出力
==============

ユニットが保持している結果データを元に、レポートを出力する。

基本的には標準出力を利用する。

